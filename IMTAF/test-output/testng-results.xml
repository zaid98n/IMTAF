<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="8" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-10-25T15:07:42 IST" name="Suite" finished-at="2021-10-25T15:08:21 IST" duration-ms="38096">
    <groups>
    </groups>
    <test started-at="2021-10-25T15:07:42 IST" name="Test" finished-at="2021-10-25T15:08:21 IST" duration-ms="38096">
      <class name="im.AllDeviceTest">
        <test-method signature="TC001_ClickAllDevice()[pri:0, instance:im.AllDeviceTest@4e50c791]" started-at="2021-10-25T15:07:54 IST" name="TC001_ClickAllDevice" finished-at="2021-10-25T15:07:54 IST" duration-ms="110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC001_ClickAllDevice -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:im.AllDeviceTest@4e50c791]" started-at="2021-10-25T15:07:54 IST" name="takeScreenShotOnFailure" finished-at="2021-10-25T15:07:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC001_ClickAllDevice status=SUCCESS method=AllDeviceTest.TC001_ClickAllDevice()[pri:0, instance:im.AllDeviceTest@4e50c791] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method signature="TC002_CreateNewDevice()[pri:0, instance:im.AllDeviceTest@4e50c791]" started-at="2021-10-25T15:07:54 IST" name="TC002_CreateNewDevice" finished-at="2021-10-25T15:08:20 IST" duration-ms="25899" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <span class="ui-button-text ui-clickable">...</span> is not clickable at point (1426, 49). Other element would receive the click: <li _ngcontent-fej-c5="" aria-haspopup="true" class="nav-item fill-width dropdown-toggle dropdown" id="surround" ngbdropdown="" ngbdropdowntoggle="" title="Notification" aria-expanded="false">...</li>
  (Session info: chrome=95.0.4638.54)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'IB-SEZ-LAP-793', ip: '192.168.1.12', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 95.0.4638.54, chrome: {chromedriverVersion: 95.0.4638.17 (a9d0719444d4b..., userDataDir: C:\Users\ZAID~1.NEZ\AppData...}, goog:chromeOptions: {debuggerAddress: localhost:54855}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 0ae7372f31246a4f39b352f1e0c0fed5]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <span class="ui-button-text ui-clickable">...</span> is not clickable at point (1426, 49). Other element would receive the click: <li _ngcontent-fej-c5="" aria-haspopup="true" class="nav-item fill-width dropdown-toggle dropdown" id="surround" ngbdropdown="" ngbdropdowntoggle="" title="Notification" aria-expanded="false">...</li>
  (Session info: chrome=95.0.4638.54)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'IB-SEZ-LAP-793', ip: '192.168.1.12', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 95.0.4638.54, chrome: {chromedriverVersion: 95.0.4638.17 (a9d0719444d4b..., userDataDir: C:\Users\ZAID~1.NEZ\AppData...}, goog:chromeOptions: {debuggerAddress: localhost:54855}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 0ae7372f31246a4f39b352f1e0c0fed5
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at pages.AllDevice.CreateNewDevice(AllDevice.java:32)
at im.AllDeviceTest.TC002_CreateNewDevice(AllDeviceTest.java:36)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC002_CreateNewDevice -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:im.AllDeviceTest@4e50c791]" started-at="2021-10-25T15:08:20 IST" name="takeScreenShotOnFailure" finished-at="2021-10-25T15:08:21 IST" duration-ms="378" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC002_CreateNewDevice status=FAILURE method=AllDeviceTest.TC002_CreateNewDevice()[pri:0, instance:im.AllDeviceTest@4e50c791] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
      </class> <!-- im.AllDeviceTest -->
      <class name="im.HomepgTest">
        <test-method signature="TC001_LaunchURL()[pri:0, instance:im.HomepgTest@8297b3a]" started-at="2021-10-25T15:07:42 IST" name="TC001_LaunchURL" finished-at="2021-10-25T15:07:46 IST" duration-ms="3413" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC001_LaunchURL -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:im.HomepgTest@8297b3a]" started-at="2021-10-25T15:07:46 IST" name="takeScreenShotOnFailure" finished-at="2021-10-25T15:07:46 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC001_LaunchURL status=SUCCESS method=HomepgTest.TC001_LaunchURL()[pri:0, instance:im.HomepgTest@8297b3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method signature="TC002_Login()[pri:0, instance:im.HomepgTest@8297b3a]" started-at="2021-10-25T15:07:46 IST" name="TC002_Login" finished-at="2021-10-25T15:07:53 IST" duration-ms="7111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC002_Login -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:im.HomepgTest@8297b3a]" started-at="2021-10-25T15:07:53 IST" name="takeScreenShotOnFailure" finished-at="2021-10-25T15:07:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC002_Login status=SUCCESS method=HomepgTest.TC002_Login()[pri:0, instance:im.HomepgTest@8297b3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method signature="TC003_ClickAllDevice()[pri:0, instance:im.HomepgTest@8297b3a]" started-at="2021-10-25T15:07:53 IST" name="TC003_ClickAllDevice" finished-at="2021-10-25T15:07:53 IST" duration-ms="81" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC003_ClickAllDevice -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:im.HomepgTest@8297b3a]" started-at="2021-10-25T15:07:53 IST" name="takeScreenShotOnFailure" finished-at="2021-10-25T15:07:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC003_ClickAllDevice status=SUCCESS method=HomepgTest.TC003_ClickAllDevice()[pri:0, instance:im.HomepgTest@8297b3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method signature="TC004_ClickMaintainRepair()[pri:0, instance:im.HomepgTest@8297b3a]" started-at="2021-10-25T15:07:53 IST" name="TC004_ClickMaintainRepair" finished-at="2021-10-25T15:07:54 IST" duration-ms="454" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC004_ClickMaintainRepair -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:im.HomepgTest@8297b3a]" started-at="2021-10-25T15:07:54 IST" name="takeScreenShotOnFailure" finished-at="2021-10-25T15:07:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC004_ClickMaintainRepair status=SUCCESS method=HomepgTest.TC004_ClickMaintainRepair()[pri:0, instance:im.HomepgTest@8297b3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method signature="TC005_ClickDispenseCollect()[pri:0, instance:im.HomepgTest@8297b3a]" started-at="2021-10-25T15:07:54 IST" name="TC005_ClickDispenseCollect" finished-at="2021-10-25T15:07:54 IST" duration-ms="129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC005_ClickDispenseCollect -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:im.HomepgTest@8297b3a]" started-at="2021-10-25T15:07:54 IST" name="takeScreenShotOnFailure" finished-at="2021-10-25T15:07:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC005_ClickDispenseCollect status=SUCCESS method=HomepgTest.TC005_ClickDispenseCollect()[pri:0, instance:im.HomepgTest@8297b3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method signature="TC006_ClickSurveyReport()[pri:0, instance:im.HomepgTest@8297b3a]" started-at="2021-10-25T15:07:54 IST" name="TC006_ClickSurveyReport" finished-at="2021-10-25T15:07:54 IST" duration-ms="261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC006_ClickSurveyReport -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:im.HomepgTest@8297b3a]" started-at="2021-10-25T15:07:54 IST" name="takeScreenShotOnFailure" finished-at="2021-10-25T15:07:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC006_ClickSurveyReport status=SUCCESS method=HomepgTest.TC006_ClickSurveyReport()[pri:0, instance:im.HomepgTest@8297b3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method signature="TC007_ClickDeviceDashboard()[pri:0, instance:im.HomepgTest@8297b3a]" started-at="2021-10-25T15:07:54 IST" name="TC007_ClickDeviceDashboard" finished-at="2021-10-25T15:07:54 IST" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC007_ClickDeviceDashboard -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:im.HomepgTest@8297b3a]" started-at="2021-10-25T15:07:54 IST" name="takeScreenShotOnFailure" finished-at="2021-10-25T15:07:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC007_ClickDeviceDashboard status=SUCCESS method=HomepgTest.TC007_ClickDeviceDashboard()[pri:0, instance:im.HomepgTest@8297b3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
      </class> <!-- im.HomepgTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
